{"version":3,"sources":["components/Feedbacks/Feedback.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.js","components/Section/Section.js","components/Feedbacks/FeedbackOptions.js","components/Feedbacks/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","task","FeedbackOptions","options","onLeaveFeedback","list","map","btn","button","type","onClick","name","id","Statistics","good","neutral","bad","total","positivePercentage","statistics","Math","round","Notification","message","feedbackBtn","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","innerHTML","toLowerCase","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,yBAAyB,WAAa,+B,mBCAjED,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,wB,qICKVC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCcxBI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEI,KAAtB,UACGD,GAAS,6BAAKA,IACdL,M,gBCqBQO,EAzBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKR,UAAWC,IAAEQ,KAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,wBAEEX,UAAWC,IAAEW,OACbC,KAAK,SACLC,QAASN,EAJX,SAMGG,EAAII,MALAJ,EAAIK,UCcFC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKtB,UAAWC,IAAEsB,WAAlB,UACE,0CAAaL,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KACd,uDAA0BG,KAAKC,MAAMH,GAArC,WCCWI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,+BAAOA,GAAW,6BAAKA,OCI1BC,EAAc,CAClB,CAAEZ,GAAI,QAASD,KAAM,QACrB,CAAEC,GAAI,QAASD,KAAM,WACrB,CAAEC,GAAI,QAASD,KAAM,QAGR,SAASc,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBZ,EADqB,KACfa,EADe,OAEED,mBAAS,GAFX,mBAErBX,EAFqB,KAEZa,EAFY,OAGNF,mBAAS,GAHH,mBAGrBV,EAHqB,KAGhBa,EAHgB,KAsBtBC,EAAqB,WACzB,OAAOhB,EAAOC,EAAUC,GAO1B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASqB,EACTpB,gBA9BgB,SAAA2B,GAEtB,OADkBA,EAAMC,OAAOC,UAAUC,eAEvC,IAAK,OACHP,GAAQ,SAAAQ,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHP,GAAW,SAAAO,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHN,GAAO,SAAAM,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAqBF,cAAC,EAAD,CAASnC,MAAM,aAAf,SACI8B,IAGA,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,mBArBAJ,EAAOgB,IAAwB,MAcjC,cAAC,EAAD,CAAcP,QAAQ,2BCjDhCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.4359aab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__6mPhR\",\"statistics\":\"Feedback_statistics__31eCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3xGz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Section_task__16X7T\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.task}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={s.list}>\n    {options.map(btn => (\n      <button\n        key={btn.id}\n        className={s.button}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        {btn.name}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.statistics}>\n    <span>Good: {good}</span>\n    <span>Neutral: {neutral}</span>\n    <span>Bad: {bad}</span>\n    <span>Total: {total}</span>\n    <span>Positive feedback: {Math.round(positivePercentage)}%</span>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <span>{message && <h4>{message}</h4>}</span>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/Feedbacks/FeedbackOptions';\nimport Statistics from './components/Feedbacks/Statistics';\nimport Notification from './components/Notification/Notification';\n\nconst feedbackBtn = [\n  { id: 'btn-1', name: 'Good' },\n  { id: 'btn-2', name: 'Neutral' },\n  { id: 'btn-3', name: 'Bad' },\n];\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = event => {\n    const statValue = event.target.innerHTML.toLowerCase();\n    switch (statValue) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return (good / countTotalFeedback()) * 100;\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={feedbackBtn}\n          onLeaveFeedback={handleIncrement}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {!countTotalFeedback() ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}